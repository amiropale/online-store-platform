services:
  mongo-user:
    image: mongo
    container_name: mongo-user
    ports:
      - "27017:27017"
    volumes:
      - user-mongo-data:/data/db

  mongo-product:
    image: mongo
    container_name: mongo-product
    ports:
      - "27018:27017"
    volumes:
      - product-mongo-data:/data/db

  mongo-order:
    image: mongo
    container_name: mongo-order
    ports:
      - "27019:27017"
    volumes:
      - order-mongo-data:/data/db

  mongo-payment:
    image: mongo
    container_name: mongo-payment
    ports:
      - "27020:27017"
    volumes:
      - payment-mongo-data:/data/db

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3001:3000"
    environment:
      - MONGO_URI=mongodb://mongo-user:27017/userdb
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    depends_on:
      - mongo-user
      - redis
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGO_URI=mongodb://mongo-product:27017/productdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    depends_on:
      - redis
      - elasticsearch
      - mongo-product
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGO_URI=mongodb://mongo-order:27017/orderdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - JWT_SECRET=${JWT_SECRET}
      - PRODUCT_SERVICE_URL=http://product-service:3002
    depends_on:
      - redis
      - elasticsearch
      - mongo-order
      - product-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - MONGO_URI=mongodb://mongo-payment:27017/paymentdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo-payment
      - redis
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "4000:4000"
    environment:
      - USER_SERVICE_URL=http://user-service:3000
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - ORDER_SERVICE_URL=http://order-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3005
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - user-service
      - product-service
      - order-service
      - payment-service
      - notification-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      

volumes:
  user-mongo-data:
  product-mongo-data:
  order-mongo-data:
  payment-mongo-data:
  redis-data:
  esdata: